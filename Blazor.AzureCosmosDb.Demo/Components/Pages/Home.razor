@page "/"
@rendermode InteractiveServer
@inject IEngineerService engineerService

@if (engineers == null)
{
    <div class="progress">
        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
    </div>
}
else
{
    <a href="@($"Upsert")" class="btn btn-primary"><span class="oi oi-add" />Add Engineer</a>

    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Name </th>
                    <th>Country </th>
                    <th>Specialty </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var engineer in engineers)
                {
                    <tr>
                        <td>@engineer.name</td>
                        <td>@engineer.country</td>
                        <td>@engineer.specialty</td>
                        <td>
                            <a href="@($"Upsert/{engineer.id}")" class="btn btn-primary"><i class="bi bi-pencil"></i></a>
                            <button class="btn btn-danger" @onclick="async () => await DeleteEngineer(engineer.id)"><i class="bi bi-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    List<Engineer> engineers = new();

    protected async override Task OnInitializedAsync()
    {
        engineers = await engineerService.GetAllEngineerDetails();
    }

    private async Task DeleteEngineer(Guid? id)
    {
        await engineerService.DeleteEngineer(id.ToString());
        engineers = await engineerService.GetAllEngineerDetails();
    }
}